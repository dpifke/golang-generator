package generator

import (
	"fmt"
	"io"
)

// WriteGolangHeader writes the file header for a generated Go source file to
// the specified io.Writer.
func WriteGolangHeader(out io.Writer, src, pkg string, imports ...string) error {
	if _, err := fmt.Fprintln(out, "// Code generated by go generate."); err != nil {
		return err
	}
	fmt.Fprintln(out, "// source:", src)
	fmt.Fprintln(out, "// DO NOT EDIT!")
	fmt.Fprintln(out)

	fmt.Fprintln(out, "package", pkg)
	_, err := fmt.Fprintln(out) // might be final line if len(imports) == 0

	if len(imports) > 1 {
		fmt.Fprintln(out, "import (")
		for _, i := range imports {
			fmt.Fprintf(out, "\t%q", i)
			fmt.Fprintln(out)
		}
		fmt.Fprintln(out, ")")
		_, err = fmt.Fprintln(out)
	} else if len(imports) > 0 {
		fmt.Fprintf(out, "import %q", imports[0])
		fmt.Fprintln(out)
		_, err = fmt.Fprintln(out)
	}

	return err
}
